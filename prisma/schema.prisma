generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model ActDetailDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  point       String
  type        String
  img         String
  startdate   String
  enddate     String
  description String
  disname     String
  dislink     String
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model BlogDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  img         String
  video       String
  description String
  creditlink  String
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model CheckOnlineDB {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  user_id         String
  checkIn         DateTime  @default(now())
  checkOut        DateTime?
  totalOnlineTime Int       @default(0)
  createdAt       DateTime  @default(now())
  createdBy       String?
  updatedAt       DateTime  @updatedAt
  updatedBy       String
  deleteBy        String
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userID    String
  content   String
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model ConditionGameMatchDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  maxParty    Int
  limitNumber Int      @default(0)
  gameId      String?  @db.ObjectId
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model CreditPointDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  points      BigInt   @default(0)
  totalPoints BigInt
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model GameCategoryDB {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model GameEventDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String // ชื่อรายการแข่ง
  description String? // รายละเอียดของรายการแข่ง
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model GameMatchDB {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  gameId       String   @db.ObjectId
  rank         Boolean
  selectRankID String?  @db.ObjectId
  channel_id   String
  partyLimit   Int
  limitNumber  Int
  status       Boolean
  members      String[]
  createdAt    DateTime @default(now())
  createdBy    String?
  updatedAt    DateTime @updatedAt
  updatedBy    String
  deleteBy     String
}

model GameMatchScheduleDB {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  teamAId      String   @db.ObjectId // เชื่อมกับ GameRegistrationDB
  teamBId      String   @db.ObjectId // เชื่อมกับ GameRegistrationDB
  eventId      String   @db.ObjectId // เชื่อมกับรายการแข่ง (GameEventDB)
  matchTime    DateTime // เวลาแข่งขัน
  status       String // สถานะของการแข่งขัน (เช่น pending, completed)
  channel_id   String // ID ของช่องที่ใช้สำหรับการแข่งขัน (เช่น Discord Channel)
  winnerTeamId String? // ทีมที่ชนะการแข่งขัน
  createdAt    DateTime @default(now())
  createdBy    String?
  updatedAt    DateTime @updatedAt
  updatedBy    String
  deleteBy     String
}

model GameOnlineDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  logo        String?
  game_name   String
  partyLimit  Int
  ranking     Boolean // มีระบบแรงค์ไม่มีระบบแรงค์
  numberMatch Int?
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model GameRankDB {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  nameRank  String
  imgRank   String
  number    Int
  gameId    String   @db.ObjectId
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model GameRegistrationEventDB {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  isIndividual Boolean // true ถ้าเป็นการสมัครแบบเดี่ยว, false ถ้าเป็นการสมัครแบบปาร์ตี้
  GameEventId  String // เชื่อมกับตารางที่เก็บข้อมูลรายการแข่ง
  teamId       String // กรณีลงทะเบียนด้วยทีม
  createdAt    DateTime @default(now())
  createdBy    String?
  updatedAt    DateTime @updatedAt
  updatedBy    String
  deleteBy     String
}

model GameTypeDB {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  categoryId String   @db.ObjectId
  createdAt  DateTime @default(now())
  createdBy  String?
  updatedAt  DateTime @updatedAt
  updatedBy  String
  deleteBy   String
}

model GameTypeGame {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  gameId    String   @db.ObjectId
  typeId    String   @db.ObjectId
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model Guild {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  guild_name   String?
  guild_level  Int      @default(1)
  guild_copper BigInt   @default(0)
  guild_size   Int      @default(5)
  guild_roleId String?
  guild_leader String
  Logo         String   @default("")
  backdrop     String   @default("")
  discordlink  String   @default("")
  createdAt    DateTime @default(now())
  createdBy    String?
  updatedAt    DateTime @updatedAt
  updatedBy    String
  deleteBy     String
}

model GuildCreateReport {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId   String
  channelId String
  messageId String
  guildName String
  members   String[]
}

model GuildMembers {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  guildId   String   @db.ObjectId
  userId    String
  position  String?
  status    String?
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model ImageList {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  modalName String
  imageUrl  String   @unique
  nameFile  String   @unique // Mark as unique
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model InviteRequest {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  userId  String
  guildId String
}

model NewsCategoryDB {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  createdAt  DateTime     @default(now())
  createdBy  String?
  updatedAt  DateTime     @updatedAt
  updatedBy  String
  deleteBy   String
  NewsTypeDB NewsTypeDB[]
}

model NewsTypeDB {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  createdAt      DateTime       @default(now())
  createdBy      String?
  updatedAt      DateTime       @updatedAt
  updatedBy      String
  deleteBy       String
  categoryId     String         @db.ObjectId
  newsCategoryDB NewsCategoryDB @relation(fields: [categoryId], references: [id])
  NewsTypeNews   NewsTypeNews[]
}

model NewsTypeNews {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  newsUpdateId String       @db.ObjectId
  typeId       String       @db.ObjectId
  createdAt    DateTime     @default(now())
  createdBy    String?
  updatedAt    DateTime     @updatedAt
  updatedBy    String
  deleteBy     String
  newsTypeDB   NewsTypeDB   @relation(fields: [typeId], references: [id])
  newsUpdateDB NewsUpdateDB @relation(fields: [newsUpdateId], references: [id])
}

model NewsUpdateDB {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  img          String
  description  String
  creditlink   String
  createdAt    DateTime       @default(now())
  createdBy    String?
  updatedAt    DateTime?      @updatedAt
  updatedBy    String
  deleteBy     String
  NewsTypeNews NewsTypeNews[]
}

model paymentHistory {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  status       String   @default("pending")
  reason       String?
  title        String?
  detail       String?
  total        String?
  receive      String?
  pay          String?
  net          String?
  createdAt    DateTime @default(now())
  createdBy    String?
  updatedAt    DateTime @updatedAt
  updatedBy    String
  deleteBy     String
  coin_copper  BigInt   @default(0)
  coin_silver  BigInt   @default(0)
  coin_gold    BigInt   @default(0)
  coin_diamond BigInt   @default(0)
  coin_crystal BigInt   @default(0)
}

model PointHistoryDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  discord_id  String
  points      Int
  description String
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model RuleDB {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  topic     String
  IssueBy   Int
  GuildID   String
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model Server {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  discordId String   @unique // Discord server ID
  ownerId   String // Discord ID of the owner
  createdAt DateTime @default(now()) // Timestamp of creation
  updatedAt DateTime @updatedAt // Timestamp of last update
}

model topicDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  ruleId      Int
  description String
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model TeamDB {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  teamName   String // ชื่อทีม
  represent  String // ชื่อทีม
  members    String[] // รายชื่อสมาชิกในทีม (discord_id หรือ userId)
  TeamLeader String // ตัวแทนของทีม
  createdAt  DateTime @default(now())
  createdBy  String?
  updatedAt  DateTime @updatedAt
  updatedBy  String
  deleteBy   String
}

model UserDB {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  discord_id        String   @unique
  username          String?
  email             String   @unique
  nickname          String?
  password          String?
  firstname         String
  lastname          String
  birthday          DateTime
  gender            String
  alternativeGender String
  createdAt         DateTime @default(now())
  createdBy         String?
  updatedAt         DateTime @updatedAt
  updatedBy         String
  deleteBy          String
}

model UserGameRank {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  gameId     String   @db.ObjectId
  userId     String
  gameRankId String   @db.ObjectId
  invitation Boolean
  createdAt  DateTime @default(now())
  createdBy  String?
  updatedAt  DateTime @updatedAt
  updatedBy  String
  deleteBy   String
}

model Wallet {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  coin_copper  BigInt   @default(0)
  coin_silver  BigInt   @default(0)
  coin_gold    BigInt   @default(0)
  coin_diamond BigInt   @default(0)
  coin_crystal BigInt   @default(0)
  createdAt    DateTime @default(now())
  createdBy    String?
  updatedAt    DateTime @updatedAt
  updatedBy    String
  deleteBy     String
}

model WebDefaultDB {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  logoSquare     String? // โลโก้ที่เป็นสี่เหลี่ยม, ค่าเริ่มต้นเป็น null โดยไม่ต้องใส่ @default
  logoCircle     String? // โลโก้ที่เป็นวงกลม, ค่าเริ่มต้นเป็น null โดยไม่ต้องใส่ @default
  logoWide       String? // โลโก้ที่เป็น wide, ค่าเริ่มต้นเป็น null โดยไม่ต้องใส่ @default
  defaultImg     String?
  defaultProfile String?
  facebook       String?
  instagram      String?
  youtube        String?
  tiktok         String?
  gmail          String?
  createdAt      DateTime @default(now())
  createdBy      String?
  updatedAt      DateTime @updatedAt
  updatedBy      String
  deleteBy       String
}
