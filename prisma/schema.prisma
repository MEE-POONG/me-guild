generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model UserDB {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  discord_id        String   @unique
  username          String?
  email             String   @unique
  nickname          String?
  password          String?
  firstname         String
  lastname          String
  birthday          DateTime
  gender            String
  alternativeGender String
  createdAt         DateTime @default(now())
  createdBy         String?
  updatedAt         DateTime @updatedAt
  updatedBy         String
  deleteBy          String
}

model CheckOnlineDB {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  user_id         String
  checkIn         DateTime  @default(now())
  checkOut        DateTime?
  totalOnlineTime Int       @default(0)
  createdAt       DateTime  @default(now())
  createdBy       String?
  updatedAt       DateTime  @updatedAt
  updatedBy       String
  deleteBy        String
}

model CreditPointDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  points      Int      @default(0)
  totalPoints Int
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model PointHistoryDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  discord_id  String
  points      Int
  description String
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model GameOnlineDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  logo        String
  game_name   String
  partyLimit  Int
  ranking     Boolean // มีระบบแรงค์ไม่มีระบบแรงค์
  numberMatch Int?
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String?
  deleteBy    String?
}

model GameCategoryDB {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model GameTypeDB {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  createdAt  DateTime @default(now())
  createdBy  String?
  updatedAt  DateTime @updatedAt
  updatedBy  String
  deleteBy   String
  categoryId String   @db.ObjectId
}

model GameTypeGame {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  gameId    String   @db.ObjectId
  typeId    String   @db.ObjectId
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model GameRankUser {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id   String
  rank_id   String   @db.ObjectId
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model GameMatchDB {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  gameId       String   @db.ObjectId
  rank         Boolean
  selectRankID String?  @db.ObjectId
  channel_id   String
  partyLimit   Int
  limitNumber  Int
  status       Boolean
  members      String[]
  createdAt    DateTime @default(now())
  createdBy    String?
  updatedAt    DateTime @updatedAt
  updatedBy    String
  deleteBy     String
}

model ConditionGameMatchDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  maxParty    Int
  limitNumber Int      @default(0)
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
  gameId      String?  @db.ObjectId
}

model GameRankDB {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  nameRank  String
  imgRank   String
  number    Int
  gameId    String   @db.ObjectId
  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
  updatedBy String
  deleteBy  String
}

model UserGameRank {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  gameId     String   @db.ObjectId
  userId     String
  gameRankId String   @db.ObjectId
  invitation Boolean
  createdAt  DateTime @default(now())
  createdBy  String?
  updatedAt  DateTime @updatedAt
  updatedBy  String
  deleteBy   String
}

model NewsUpdateDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  img         String
  description String
  creditlink  String
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model GuildProfileDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  guildname   String
  description String
  rule        String
  discordlink String
  backdrop    String
  avatar      String
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model ActDetailDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  point       String
  type        String
  img         String
  startdate   String
  enddate     String
  description String
  disname     String
  dislink     String
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String
  deleteBy    String
}

model Wallet {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  createdAt    DateTime @default(now())
  createdBy    String?
  updatedAt    DateTime @updatedAt
  updatedBy    String?
  coin_copper  Int      @default(0)
  coin_silver  Int      @default(0)
  coin_gold    Int      @default(0)
  coin_diamond Int      @default(0)
  coin_crystal Int      @default(0)
}

model paymentHistory {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  status       String   @default("pending")
  reason       String?
  title        String?
  detail       String?
  total        String?
  receive      String?
  pay          String?
  net          String?
  createdAt    DateTime @default(now())
  createdBy    String?
  updatedAt    DateTime @updatedAt
  updatedBy    String
  coin_copper  Int      @default(0)
  coin_silver  Int      @default(0)
  coin_gold    Int      @default(0)
  coin_diamond Int      @default(0)
  coin_crystal Int      @default(0)
}

model Guild {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  guild_name   String?
  guild_level  Int     @default(1)
  guild_copper Int     @default(0)
  guild_size   Int     @default(5)
  guild_roleId String?
  guild_leader String
}

model GuildMembers {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  guildId  String  @db.ObjectId
  userId   String
  position String?
  status   String?
}

model InviteData {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  userId  String
  guildId String
}

model GuildCreateReport {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId   String
  channelId String
  messageId String
  guildName String
  members   String[]
}
